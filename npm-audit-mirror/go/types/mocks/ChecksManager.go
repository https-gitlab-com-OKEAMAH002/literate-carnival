// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ChecksManager is an autogenerated mock type for the ChecksManager type
type ChecksManager struct {
	mock.Mock
}

// PerformChecks provides a mock function with given fields: packageRequestURL
func (_m *ChecksManager) PerformChecks(packageRequestURL string) (bool, string, error) {
	ret := _m.Called(packageRequestURL)

	if len(ret) == 0 {
		panic("no return value specified for PerformChecks")
	}

	var r0 bool
	var r1 string
	var r2 error
	if rf, ok := ret.Get(0).(func(string) (bool, string, error)); ok {
		return rf(packageRequestURL)
	}
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(packageRequestURL)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(string) string); ok {
		r1 = rf(packageRequestURL)
	} else {
		r1 = ret.Get(1).(string)
	}

	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(packageRequestURL)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// NewChecksManager creates a new instance of ChecksManager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewChecksManager(t interface {
	mock.TestingT
	Cleanup(func())
}) *ChecksManager {
	mock := &ChecksManager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
