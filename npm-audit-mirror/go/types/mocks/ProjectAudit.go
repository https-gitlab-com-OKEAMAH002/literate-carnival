// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// ProjectAudit is an autogenerated mock type for the ProjectAudit type
type ProjectAudit struct {
	mock.Mock
}

// StartAudit provides a mock function with given fields: ctx, pollInterval
func (_m *ProjectAudit) StartAudit(ctx context.Context, pollInterval time.Duration) {
	_m.Called(ctx, pollInterval)
}

// NewProjectAudit creates a new instance of ProjectAudit. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewProjectAudit(t interface {
	mock.TestingT
	Cleanup(func())
}) *ProjectAudit {
	mock := &ProjectAudit{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
