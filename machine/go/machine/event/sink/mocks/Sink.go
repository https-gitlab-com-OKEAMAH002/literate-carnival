// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	machine "go.skia.org/infra/machine/go/machine"
)

// Sink is an autogenerated mock type for the Sink type
type Sink struct {
	mock.Mock
}

// Send provides a mock function with given fields: _a0, _a1
func (_m *Sink) Send(_a0 context.Context, _a1 machine.Event) error {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Send")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, machine.Event) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewSink creates a new instance of Sink. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSink(t interface {
	mock.TestingT
	Cleanup(func())
}) *Sink {
	mock := &Sink{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
