// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: bisection/proto/culprit_detection.proto

package proto

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type State int32

const (
	// The state is unknown when the calculated p-value is in between the low and high
	// thresholds. This usually indicates that more samples are required.
	State_UNKNOWN State = 0
	// The state is different when the calculated p-value is lower than or equal to the
	// low threshold. This indicates that the samples are unlikely to come from the same
	// distribution and are therefore liklely different.
	State_DIFFERENT State = 1
	// The state is the same when the calculated p-value is greater than the high
	// threshold. This indicates that the samples are unlikely to come from distributions
	// that differ by the given comparison magnitude.
	State_SAME State = 2
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		0: "UNKNOWN",
		1: "DIFFERENT",
		2: "SAME",
	}
	State_value = map[string]int32{
		"UNKNOWN":   0,
		"DIFFERENT": 1,
		"SAME":      2,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_bisection_proto_culprit_detection_proto_enumTypes[0].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_bisection_proto_culprit_detection_proto_enumTypes[0]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_bisection_proto_culprit_detection_proto_rawDescGZIP(), []int{0}
}

type RequestedDifference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The estimated size of the regression to search for. Smaller magnitudes generally
	// require more samples.
	//
	// The comparsion magnitude is used to calculate the upper (high) threshold.
	//
	// For functional differences, the comparison magnitude refers to the failure rate, and
	// is expected to be of a value between 0.0 and 1.0.
	// Comparison magnitude defaults to 0.5 if undefined.
	//
	// For performance differences, the comparison magnitude refers to the size of the
	// performance difference, and is expected to be of a value between 0.0 and 4.0.
	// Smaller magnitudes generally require more samples.
	// Comparison magnitude defaults to 1.0 if undefined.
	ComparisonMagnitude float64 `protobuf:"fixed64,1,opt,name=comparison_magnitude,json=comparisonMagnitude,proto3" json:"comparison_magnitude,omitempty"`
	// If the calculated p-value is greater than this high threshold, the two samples are
	// determined to come from the same distribution.
	//
	// Setting this will override the high threshold that's usually calculated using the
	// comparison magnitude.
	HighThreshold float64 `protobuf:"fixed64,2,opt,name=high_threshold,json=highThreshold,proto3" json:"high_threshold,omitempty"`
	// The traditional significance threshold. If the calculated p-value is lower than this
	// lower threshold, the two samples are determined to come from different
	// distributions. This defaults to a value of 0.01.
	LowThreshold float64 `protobuf:"fixed64,3,opt,name=low_threshold,json=lowThreshold,proto3" json:"low_threshold,omitempty"`
}

func (x *RequestedDifference) Reset() {
	*x = RequestedDifference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bisection_proto_culprit_detection_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestedDifference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestedDifference) ProtoMessage() {}

func (x *RequestedDifference) ProtoReflect() protoreflect.Message {
	mi := &file_bisection_proto_culprit_detection_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestedDifference.ProtoReflect.Descriptor instead.
func (*RequestedDifference) Descriptor() ([]byte, []int) {
	return file_bisection_proto_culprit_detection_proto_rawDescGZIP(), []int{0}
}

func (x *RequestedDifference) GetComparisonMagnitude() float64 {
	if x != nil {
		return x.ComparisonMagnitude
	}
	return 0
}

func (x *RequestedDifference) GetHighThreshold() float64 {
	if x != nil {
		return x.HighThreshold
	}
	return 0
}

func (x *RequestedDifference) GetLowThreshold() float64 {
	if x != nil {
		return x.LowThreshold
	}
	return 0
}

type GetPerformanceDifferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Values for performance differences are doubles, which usually refer to the
	// histogram sample values.
	SamplesA   []float64            `protobuf:"fixed64,1,rep,packed,name=samples_a,json=samplesA,proto3" json:"samples_a,omitempty"`
	SamplesB   []float64            `protobuf:"fixed64,2,rep,packed,name=samples_b,json=samplesB,proto3" json:"samples_b,omitempty"`
	Difference *RequestedDifference `protobuf:"bytes,3,opt,name=difference,proto3" json:"difference,omitempty"`
}

func (x *GetPerformanceDifferenceRequest) Reset() {
	*x = GetPerformanceDifferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bisection_proto_culprit_detection_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPerformanceDifferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPerformanceDifferenceRequest) ProtoMessage() {}

func (x *GetPerformanceDifferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bisection_proto_culprit_detection_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPerformanceDifferenceRequest.ProtoReflect.Descriptor instead.
func (*GetPerformanceDifferenceRequest) Descriptor() ([]byte, []int) {
	return file_bisection_proto_culprit_detection_proto_rawDescGZIP(), []int{1}
}

func (x *GetPerformanceDifferenceRequest) GetSamplesA() []float64 {
	if x != nil {
		return x.SamplesA
	}
	return nil
}

func (x *GetPerformanceDifferenceRequest) GetSamplesB() []float64 {
	if x != nil {
		return x.SamplesB
	}
	return nil
}

func (x *GetPerformanceDifferenceRequest) GetDifference() *RequestedDifference {
	if x != nil {
		return x.Difference
	}
	return nil
}

type GetPerformanceDifferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State State `protobuf:"varint,1,opt,name=state,proto3,enum=State" json:"state,omitempty"`
	// The calculated p-value used to determine the state.
	PValue float64 `protobuf:"fixed64,2,opt,name=p_value,json=pValue,proto3" json:"p_value,omitempty"`
	// The low threshold used as part of the calculation.
	LowThreshold float64 `protobuf:"fixed64,3,opt,name=low_threshold,json=lowThreshold,proto3" json:"low_threshold,omitempty"`
	// The high threshold used as part of the calculation.
	HighThreshold float64 `protobuf:"fixed64,4,opt,name=high_threshold,json=highThreshold,proto3" json:"high_threshold,omitempty"`
}

func (x *GetPerformanceDifferenceResponse) Reset() {
	*x = GetPerformanceDifferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bisection_proto_culprit_detection_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPerformanceDifferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPerformanceDifferenceResponse) ProtoMessage() {}

func (x *GetPerformanceDifferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bisection_proto_culprit_detection_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPerformanceDifferenceResponse.ProtoReflect.Descriptor instead.
func (*GetPerformanceDifferenceResponse) Descriptor() ([]byte, []int) {
	return file_bisection_proto_culprit_detection_proto_rawDescGZIP(), []int{2}
}

func (x *GetPerformanceDifferenceResponse) GetState() State {
	if x != nil {
		return x.State
	}
	return State_UNKNOWN
}

func (x *GetPerformanceDifferenceResponse) GetPValue() float64 {
	if x != nil {
		return x.PValue
	}
	return 0
}

func (x *GetPerformanceDifferenceResponse) GetLowThreshold() float64 {
	if x != nil {
		return x.LowThreshold
	}
	return 0
}

func (x *GetPerformanceDifferenceResponse) GetHighThreshold() float64 {
	if x != nil {
		return x.HighThreshold
	}
	return 0
}

var File_bisection_proto_culprit_detection_proto protoreflect.FileDescriptor

var file_bisection_proto_culprit_detection_proto_rawDesc = []byte{
	0x0a, 0x27, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x63, 0x75, 0x6c, 0x70, 0x72, 0x69, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x01, 0x0a, 0x13, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x5f,
	0x6d, 0x61, 0x67, 0x6e, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x4d, 0x61, 0x67, 0x6e, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x74, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x68, 0x69,
	0x67, 0x68, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c,
	0x6f, 0x77, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0c, 0x6c, 0x6f, 0x77, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x22, 0x91, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01, 0x52, 0x08, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x41, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5f, 0x62, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x01, 0x52, 0x08, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x42, 0x12, 0x34,
	0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x44, 0x69,
	0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x6c, 0x6f, 0x77, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x74, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x68,
	0x69, 0x67, 0x68, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x2a, 0x2d, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x49, 0x46, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x32, 0x75, 0x0a, 0x10, 0x43,
	0x75, 0x6c, 0x70, 0x72, 0x69, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x61, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63,
	0x65, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x69, 0x66, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x69,
	0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x6f, 0x2e, 0x73, 0x6b, 0x69, 0x61, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_bisection_proto_culprit_detection_proto_rawDescOnce sync.Once
	file_bisection_proto_culprit_detection_proto_rawDescData = file_bisection_proto_culprit_detection_proto_rawDesc
)

func file_bisection_proto_culprit_detection_proto_rawDescGZIP() []byte {
	file_bisection_proto_culprit_detection_proto_rawDescOnce.Do(func() {
		file_bisection_proto_culprit_detection_proto_rawDescData = protoimpl.X.CompressGZIP(file_bisection_proto_culprit_detection_proto_rawDescData)
	})
	return file_bisection_proto_culprit_detection_proto_rawDescData
}

var file_bisection_proto_culprit_detection_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bisection_proto_culprit_detection_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_bisection_proto_culprit_detection_proto_goTypes = []interface{}{
	(State)(0),                               // 0: State
	(*RequestedDifference)(nil),              // 1: RequestedDifference
	(*GetPerformanceDifferenceRequest)(nil),  // 2: GetPerformanceDifferenceRequest
	(*GetPerformanceDifferenceResponse)(nil), // 3: GetPerformanceDifferenceResponse
}
var file_bisection_proto_culprit_detection_proto_depIdxs = []int32{
	1, // 0: GetPerformanceDifferenceRequest.difference:type_name -> RequestedDifference
	0, // 1: GetPerformanceDifferenceResponse.state:type_name -> State
	2, // 2: CulpritDetection.GetPerformanceDifference:input_type -> GetPerformanceDifferenceRequest
	3, // 3: CulpritDetection.GetPerformanceDifference:output_type -> GetPerformanceDifferenceResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_bisection_proto_culprit_detection_proto_init() }
func file_bisection_proto_culprit_detection_proto_init() {
	if File_bisection_proto_culprit_detection_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bisection_proto_culprit_detection_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestedDifference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bisection_proto_culprit_detection_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPerformanceDifferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bisection_proto_culprit_detection_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPerformanceDifferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bisection_proto_culprit_detection_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bisection_proto_culprit_detection_proto_goTypes,
		DependencyIndexes: file_bisection_proto_culprit_detection_proto_depIdxs,
		EnumInfos:         file_bisection_proto_culprit_detection_proto_enumTypes,
		MessageInfos:      file_bisection_proto_culprit_detection_proto_msgTypes,
	}.Build()
	File_bisection_proto_culprit_detection_proto = out.File
	file_bisection_proto_culprit_detection_proto_rawDesc = nil
	file_bisection_proto_culprit_detection_proto_goTypes = nil
	file_bisection_proto_culprit_detection_proto_depIdxs = nil
}
